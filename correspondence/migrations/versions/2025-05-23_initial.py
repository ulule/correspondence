"""initial

Revision ID: 3ffe9763c112
Revises:
Create Date: 2025-05-23 10:21:07.398849

"""

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy import func
from sqlalchemy.dialects.postgresql import ARRAY

# revision identifiers, used by Alembic.
revision = "3ffe9763c112"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "correspondence_user",
        sa.Column("password", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("phone_number", sa.String(length=255), nullable=True),
        sa.Column("active_campaign_id", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("is_staff", sa.Boolean(), server_default="False", nullable=True),
        sa.Column("is_superuser", sa.Boolean(), server_default="False", nullable=True),
        sa.Column(
            "messages_sent_count", sa.Integer(), server_default="0", nullable=True
        ),
        sa.Column(
            "messages_received_count", sa.Integer(), server_default="0", nullable=True
        ),
        sa.Column("manager_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["correspondence_user.id"],
            name=op.f("correspondence_user_manager_id_fkey"),
        ),
        sa.Column(
            "country",
            sqlalchemy_utils.types.country.CountryType(length=2),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("correspondence_user_pkey")),
    )

    op.create_unique_constraint(
        "correspondence_user__organization_id__email__key",
        "correspondence_user",
        ["email"],
    )
    op.create_unique_constraint(
        "correspondence_user__organization_id__phone_number__key",
        "correspondence_user",
        ["phone_number"],
    )
    op.create_unique_constraint(
        "correspondence_user_active_campaign_id_key",
        "correspondence_user",
        ["active_campaign_id"],
    )
    op.create_index(
        "ix_correspondence_user_manager_id", "correspondence_user", ["manager_id"]
    )

    op.create_table(
        "correspondence_organization",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("slug", sa.String(length=50), nullable=False),
        sa.Column(
            "country",
            sqlalchemy_utils.types.country.CountryType(length=2),
            nullable=False,
        ),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["correspondence_user.id"],
            name=op.f("correspondence_organization_owner_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("correspondence_organization_pkey")),
    )
    op.create_unique_constraint(
        "correspondence_organization_slug_key", "correspondence_organization", ["slug"]
    )
    op.add_column(
        "correspondence_user",
        sa.Column(
            "organization_id",
            sa.Integer,
            sa.ForeignKey("correspondence_organization.id"),
            nullable=True,
        ),
    )
    op.create_table(
        "correspondence_phone_number",
        sa.Column("number", sa.String(length=255), nullable=False),
        sa.Column(
            "country",
            sqlalchemy_utils.types.country.CountryType(length=2),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["correspondence_organization.id"],
            name=op.f("correspondence_phone_number_organization_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("correspondence_phone_number_pkey")),
    )
    op.create_table(
        "correspondence_conversation",
        sa.Column("receiver_id", sa.Integer(), nullable=False),
        sa.Column("messages_count", sa.Integer(), server_default="0", nullable=True),
        sa.Column("last_message_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("synced_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("unread", sa.Boolean(), server_default="False", nullable=True),
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.Column("phone_number_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["correspondence_organization.id"],
            name=op.f("correspondence_conversation_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["phone_number_id"],
            ["correspondence_phone_number.id"],
            name=op.f("correspondence_conversation_phone_number_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["receiver_id"],
            ["correspondence_user.id"],
            name=op.f("correspondence_conversation_receiver_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("correspondence_conversation_pkey")),
    )
    op.create_unique_constraint(
        "ix_correspondence_conversation_receiver_id",
        "correspondence_conversation",
        ["receiver_id"],
    )
    op.create_table(
        "correspondence_automessage",
        sa.Column("body", sa.Text(), nullable=False),
        sa.Column("sender_id", sa.Integer(), nullable=False),
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["correspondence_organization.id"],
            name=op.f("correspondence_automessage_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["correspondence_user.id"],
            name=op.f("correspondence_automessage_sender_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("correspondence_automessage_pkey")),
    )
    op.create_table(
        "correspondence_message",
        sa.Column("sender_id", sa.Integer(), nullable=False),
        sa.Column("conversation_id", sa.Integer(), nullable=False),
        sa.Column("automessage_id", sa.Integer(), nullable=True),
        sa.Column("provider_id", sa.String(100), nullable=True),
        sa.Column("provider_ids", ARRAY(sa.String(100)), nullable=True),
        sa.Column("body", sa.Text(), nullable=False),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["automessage_id"],
            ["correspondence_automessage.id"],
            name=op.f("correspondence_message_automessage_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["correspondence_organization.id"],
            name=op.f("correspondence_message_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["correspondence_conversation.id"],
            name=op.f("correspondence_message_conversation_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["correspondence_user.id"],
            name=op.f("correspondence_message_sender_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("correspondence_message_pkey")),
    )
    op.add_column(
        "correspondence_conversation",
        sa.Column(
            "last_message_id",
            sa.Integer,
            sa.ForeignKey("correspondence_message.id"),
            nullable=True,
        ),
    )
    op.create_index(
        "ix_correspondence_conversation_last_message_id",
        "correspondence_conversation",
        ["last_message_id"],
    )
    op.create_unique_constraint(
        "correspondence_message__conversation_id__automessage_id__key",
        "correspondence_message",
        ["conversation_id", "automessage_id"],
    )
    op.create_unique_constraint(
        "correspondence_message_provider_id_key",
        "correspondence_message",
        ["provider_id"],
    )
    op.create_unique_constraint(
        "correspondence_message_provider_ids_key",
        "correspondence_message",
        ["provider_ids"],
    )
    op.create_index(
        "ix_correspondence_message_conversation_id",
        "correspondence_message",
        ["conversation_id"],
    )
    op.create_index(
        "ix_correspondence_message_sender_id", "correspondence_message", ["sender_id"]
    )

    op.create_table(
        "correspondence_messagepart",
        sa.Column("provider_id", sa.String(length=100), nullable=False),
        sa.Column("body", sa.Text(), nullable=False),
        sa.Column("part_id", sa.Integer(), nullable=False),
        sa.Column("part_ref", sa.String(length=100), nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=True),
        sa.Column("sender_id", sa.Integer(), nullable=False),
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=func.now(),
        ),
        sa.ForeignKeyConstraint(
            ["message_id"],
            ["correspondence_message.id"],
            name=op.f("correspondence_messagepart_message_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["correspondence_organization.id"],
            name=op.f("correspondence_messagepart_organization_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["correspondence_user.id"],
            name=op.f("correspondence_messagepart_sender_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("correspondence_messagepart_pkey")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("correspondence_phone_number")
    op.drop_table("correspondence_messagepart")
    op.drop_table("correspondence_automessage")
    op.drop_table("correspondence_organization")
    op.drop_table("correspondence_user")
    op.drop_table("correspondence_message")
    op.drop_table("correspondence_conversation")
    # ### end Alembic commands ###
